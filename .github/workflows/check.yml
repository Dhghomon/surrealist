name: CI

on:
  push:
    branches: ["main"]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
        - name: Install Bun
          uses: oven-sh/setup-bun@v1

        - name: Code Checkout
          uses: actions/checkout@v3

        - name: Dependency Cache
          uses: actions/cache@v4
          with:
              path: ~/.bun/install/cache
              key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
              restore-keys: |
                  ${{ runner.os }}-bun-

        - name: Install dependencies
          run: bun install

        - name: Checking Code Quality
          run: bun run quality:check

  rust-checks:
    name: Rust Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Required OS Dependencies
        run: |
          sudo apt update
          sudo apt install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install Bun
        uses: oven-sh/setup-bun@v1

      - name: Bun Dependency Cache
        uses: actions/cache@v4
        with:
            path: ~/.bun/install/cache
            key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
            restore-keys: |
                ${{ runner.os }}-bun-

      - name: Install Bun dependencies
        run: bun install

      # This step is required to run following steps, as they require the `dist` directory
      - name: Build frontend
        run: bun build

      - name: Check Rust formatting
        run: |
          cd src-tauri
          cargo fmt --all -- --check
          cd ..

      - name: Test Tauri
        run: |
          cd src-tauri
          cargo test --all-features
          cd ..

      - name: Clippy
        run: |
          cd src-tauri
          cargo clippy -- -D warnings
          cd ..
